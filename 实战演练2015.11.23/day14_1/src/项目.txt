项目

功能：
	注册
	登录
	
JSP：
	* longin.jsp 	-->	登录表单
	* regist.jsp	-->	注册表单
	* index.jsp		-->	主要(只有登录成功才能看到)
	
Servlet:
	* LoginServlet	
	* RegistServlet		
	
Service
	* UserService  	--> 与用户相关的业务类
	
Dao:
	* UserDao		-->	与用户相关的数据类
	
Domain(beans, entity, bo, vo)
	* User（对应数据库，对应所有表单）
		username
		password
		verifyCode

-----------------

数据库设计
	*users.xml
		<users>
			<user username="xxx" password="xxx"/>
		</users>
	
-----------------

步骤
1、创建项目
2、导包
	* CommonUtils
	* commons-beanutils
	* commons-logging
	* dom4j
3、建包
	* com.lyt.user.domainv
		User
		
	* com.lyt.user.dao
		UserDao
	* com.lyt.user.service
		UserService
	* com.lyt.user.web.servlet
		LoginServlet
		RegistServlet
4、jsp
	login.jsp
	regist.jsp
	index.jsp		
5、在H盘创建一个users.xml文件	
	添加根元素
	保存文件为utf-8编码
	
注册功能
	regist.jsp
		1、完成regist.jsp的基本功能！
	RegistServlet
		封装表单数据，封装到User对象中。
		调用service的regist()方法。
		*如果这个方法没有出问题，输出“注册成功”
		*如果这个方法抛出了异常，把错误信息保存到request域，转发到regist.jsp(显示错误信息)
	UserService #regist()
		没有返回值，但注册失败抛出一个自定义的异常！可以在异常中添加异常信息，自定义一个异常类
		校验用户是否已被注册(通过用户名进行查询)
		添加用户
	UserDao：通过业务分析得到结果，需要提供两个方法
		按用户名查询用户对象：US人 findByUsername(String username)
		插入一个用户得到数据库中:void add(User user)
		
工作：
1、在service层添加一个UserException
2、dao
	*User findByUsername(String username)
	*void add(User user)
3、service
	*void regist() throws UserException
4、servlet
	封装表单数据到User对象中
	使用user调用service的regist()方法
		如果得到UserException异常，那么将异常保存到request域中，转发回regist.jsp
		输出注册成功
		
		
		
		
		
		