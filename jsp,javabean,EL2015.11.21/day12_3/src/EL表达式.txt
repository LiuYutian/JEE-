1、EL是jsp内置的表示语言！
	*jsp2.0开始，不让再使用java脚本，而是使用el表达式和动态标签来替代java脚本
	*EL替代的是<%=...%>，也就是说，EL只能做输出！

2、EL表达式来读取四大域
	*${xxx}，全域查找名为xxx的属性，如果不存在，输出空字符串，而不是null
	*${pageScope.xxx}、${requestScope.xxx}、${sessionScope.xxx}、${applicationScope.xxx}指定域获取属性

3、javaBean导航
	
	
4、EL可以输出的东西都在11个内置对象中！其中10个是Map，pageContext不是map，是pageContext类型
	*包含上面4个域
	param：对应参数，它是一个map其中key是参数名，value是参数值，适用于单值属性
	paramValues：对应参数，它是一个map其中key是参数名，value是多个参数值，适用于多值属性
	
	header：对应请求头，是一个map，其中key为头名称，vlaue是单值头，适用于单值头
	headerValues：对应请求头，是一个map，其中key为头名称，vlaue是多值头，适用于多值头
	
	initParam：获取<context-param>内的参数
	  <context-param>
	  	<param-name>xxx</param-name>
	  	<param-value>XXX</param-value>
	  </context-param>
	  <context-param>
	  	<param-name>yyy</param-name>
	  	<param-value>YYY</param-value>
	  </context-param>
	
	cookie：map<String, Cookie>类型，其中key是cookie的name，value是cookie对象。
	
	pageContext：它是pageContext类型！${pageContext.request.scheme.contextpath}
	
EL函数库(由JSTL提供)
	*导入标签库：<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
	常用字符串方法，
自定义函数库
	*写一个java类，类可以定义0-N个方法，但必须是static，而且有返回值
	*在WEB-INF目录下创建了一个tld文件
	  <function>
		 <name>fun</name>
		<function-class>cn.lyt.fn.MyFunction</function-class>
		<function-signature>java.lang.String fun()</function-signature>
	  </function>
	*在jsp页面中导入标签库 
	<%@ taglib prefix="it" uri="/WEB-INF/tlds/lyt.tld" %>
	在jsp页面中使用自定义的函数：${it:fun()}
	
	
	
	